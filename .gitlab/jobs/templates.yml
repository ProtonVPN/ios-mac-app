# Templates to be used in other jobs

# Main template for most CI jobs. Runs jobs automatically only when MR is created
# and after the merge to develop branch.
.mr_job_template:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always
    - if: $CI_COMMIT_BRANCH == "develop"
      when: always
    - if: $CI_COMMIT_TAG
      when: always
    - when: manual

.ui_full_tests_template:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always
    - if: $CI_COMMIT_BRANCH == "develop"
      when: manual
      allow_failure: true # the pipeline continues running even if the manual job is not run
    - if: $CI_COMMIT_TAG
      when: always
    - when: manual

.ui_smoke_tests_template:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH == "develop"
      when: always
    - if: $CI_COMMIT_TAG
      when: never
    - when: manual

# Template for iOS jobs.
.ios_job_template:
  before_script:
    - ssh-add -D # Delete all ssh private keys
    # Add private key for access to gitlab
    - echo "$CI_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    # Save gitlab servers public key
    - if [ -z "$(ssh-keygen -F $CI_SERVER_HOST)" ]; then ssh-keyscan -H $CI_SERVER_HOST >> ~/.ssh/known_hosts; fi
    # Make sure xcode uses system ssh/git settings
    - defaults write com.apple.dt.Xcode IDEPackageSupportUseBuiltinSCM YES
    - !reference [.prepare_secrets, before_script] # Download obfuscated constants
  after_script:
    - ssh-add -D # Delete all ssh private keys
  interruptible: true
  tags:
    - vpn-ios-tests

# Download obfuscated constants and other very top secret stuff
.prepare_secrets:
  before_script:
    - ./scripts/credentials.sh cleanup
    - ./scripts/credentials.sh setup -s -d -p .secrets-ci-${CI_JOB_ID} -r https://bot:${CI_SECRETS_REPO_KEY}@${CI_SERVER_HOST}/${CI_SECRETS_REPO_PATH}

# Template for macOS jobs. This template expects job to be run on a VM.
.mac_job_template:
  extends: .mr_job_template
  tags:
    - vpn-macos-tests
  before_script:
    - !reference [.prepare_secrets, before_script] # Download obfuscated constants
    - cd apps/macos/ProtonVPN/ && ../../../scripts/prepare_obfuscated_constants.sh && cd ../../../
    - ssh-add -D # Delete all ssh private keys
    # Add private key for access to gitlab
    - echo "$CI_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    # Save gitlab servers public key
    - if [ -z "$(ssh-keygen -F $CI_SERVER_HOST)" ]; then ssh-keyscan -H $CI_SERVER_HOST >> ~/.ssh/known_hosts; fi
    # Make sure xcode uses system ssh/git settings
    - defaults write com.apple.dt.Xcode IDEPackageSupportUseBuiltinSCM YES
  after_script:
    - ssh-add -D # Delete all ssh private keys
  interruptible: true

# Include this in artifacts part to take cobertura reports as artifacts
.code_coverage_unit:
  reports:
    coverage_report:
      coverage_format: cobertura
      path: fastlane/test_output/cobertura.xml
    junit:
      - fastlane/test_output/report.junit
