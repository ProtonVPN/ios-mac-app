# Making app releases

# ------------------------------------------ iOS app ------------------------------------------

distribute:ios:testflight:alpha:
  stage: distribute
  extends:
    - .ios_job_template
  before_script:
    - !reference [.ios_job_template, before_script] # Using reference because extending doesn't work as expected
    - git config --global user.email $GIT_CI_EMAIL
    - git config --global user.name $GIT_CI_USERNAME
    - base64 -D -o Certificates.p12 <<< $DISTRIBUTION_CERTIFICATE
    - fastlane create_ios_keychain
  script:
    - fastlane sigh download_all --download_xcode_profiles --api_key_path $APPSTORE_API_KEY_JSON
    - export atlasSecret="static let atlasSecret = \"`(curl $ATLAS_TOKEN_URL)`\""
    - cd apps/ios/ProtonVPN/ && ../../../scripts/prepare_obfuscated_constants.sh && cd ../../../
    - export NEW_BUILD_NUMBER=$(./scripts/generate_build_number.sh)
    - echo $NEW_BUILD_NUMBER
    - export CHANGELOG=$(git log $(git tag -l 'ios/beta/*' --sort=-version:refname:strip=2 | head -n 1)..HEAD --pretty="format:- %s" -- . ':(exclude)apps/macos*')
    - echo $CHANGELOG
    - fastlane ios_internal_beta changelog:"$CHANGELOG"
    - ./scripts/add_git_tag.sh
    - fastlane delete_ios_keychain ## Re-create keychain to have less problems
    - fastlane create_ios_keychain
    - fastlane ios_internal_beta changelog:"$CHANGELOG" scheme:"ProtonVPN-iOS-Staging"
  after_script: # Cleanup
    - rm -f Certificates.p12
    - fastlane delete_ios_keychain
    - !reference [.ios_job_template, after_script] # Using reference because extending doesn't work as expected
  tags:
    - iOS-deploy
  environment:
    name: deployment
  rules:
    # No release on TAGs
    - if: $CI_COMMIT_TAG
      when: never
    # Prevent pipeline on MR creation
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    # Release after each push to develop
    - if: $CI_COMMIT_BRANCH == "develop"
      when: on_success
    # Otherwise allow manual release
    - when: manual
  variables:
    CI_KEYCHAIN_NAME: "IOS_RELEASE_$CI_PIPELINE_ID"
  artifacts:
    name: "ios-build-nr"
    when: always
    paths:
      - .last_build_nr
      - build/
    exclude:
      - build/**/*.ipa
    expire_in: 60 days

# ------------------------------------------ macOS app ------------------------------------------

distribute:mac:alpha:
  stage: distribute
  variables:
    APP_BRANCH: $CI_COMMIT_BRANCH
  rules:
    # No release on TAGs
    - if: $CI_COMMIT_TAG
      when: never
    # Prevent pipeline on MR creation
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    # Release after each push to develop
    - if: $CI_COMMIT_BRANCH == "develop"
      when: on_success
    # Otherwise allow manual release
    - when: manual
  trigger:
    project: apple/vpn/mac-ci
    branch: mac-v4
    strategy: depend
