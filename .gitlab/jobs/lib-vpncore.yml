# Jobs for linting/testing/etc. LegacyCommon library.
# Stages and other useful stuff can be found in /.gitlab-ci.yml file


test:unit:LegacyCommon:ios:
  variables:
    SIMULATOR_BUNDLEID: "com.apple.CoreSimulator.SimDeviceType.iPhone-11"
    RESULT_BUNDLE_PATH: "fastlane/test_output/LegacyCommon-ios.xcresult"
    XCTEST_DESTINATION: "platform=iOS Simulator,name=${CI_JOB_ID}"
  extends:
    - .mr_job_template
    - .ios_job_template
  stage: test
  needs:
    - job: linting:code-quality
      artifacts: false
  script:
    - xcrun simctl create ${CI_JOB_ID} "$SIMULATOR_BUNDLEID" $(xcrun simctl list runtimes | grep iOS | awk '{print $NF}')
    - mkdir -p fastlane/test_output
    - cd libraries/LegacyCommon
    - xcodebuild -quiet -scheme LegacyCommon -enableCodeCoverage YES -derivedDataPath ../../DerivedData -sdk iphonesimulator -destination "$XCTEST_DESTINATION" -resultBundlePath "../../$RESULT_BUNDLE_PATH" test
    - cd ../..
    - scripts/print-coverage.sh "$RESULT_BUNDLE_PATH" LegacyCommon
    - xcrun xccov view --report --json "$RESULT_BUNDLE_PATH" > coverage.json
    - mint run twittemb/XcodeCoverageConverter generate coverage.json fastlane/test_output cobertura-xml --exclude-packages Tests
    - mint run a7ex/xcresultparser -o junit "$RESULT_BUNDLE_PATH" > fastlane/test_output/report.junit
  after_script:
    - xcrun simctl delete $CI_JOB_ID
  artifacts:
    paths:
      - "$RESULT_BUNDLE_PATH"
    reports:
      coverage_report:
        coverage_format: cobertura
        path: fastlane/test_output/cobertura.xml
      junit:
        - fastlane/test_output/report.junit

test:unit:LegacyCommon:macos:
  extends: .mac_job_template
  variables:
    RESULT_BUNDLE_PATH: "fastlane/test_output/LegacyCommon-macos.xcresult"
  stage: test
  needs:
    - job: linting:code-quality
      artifacts: false
  tags:
    - macOS_vpn
  script:
    - mkdir -p fastlane/test_output
    - xcodebuild -quiet -workspace ProtonVPN.xcworkspace -scheme LegacyCommon -enableCodeCoverage YES -derivedDataPath DerivedData -sdk macosx -destination "platform=OS X" -resultBundlePath "$RESULT_BUNDLE_PATH" test
    - scripts/print-coverage.sh "$RESULT_BUNDLE_PATH" LegacyCommon
    - xcrun xccov view --report --json "$RESULT_BUNDLE_PATH" > coverage.json
    - mint run twittemb/XcodeCoverageConverter generate coverage.json fastlane/test_output cobertura-xml --exclude-packages Tests
    - mint run a7ex/xcresultparser -o junit "$RESULT_BUNDLE_PATH" > fastlane/test_output/report.junit
  artifacts:
    paths:
      - "$RESULT_BUNDLE_PATH"
    reports:
      coverage_report:
        coverage_format: cobertura
        path: fastlane/test_output/cobertura.xml
      junit:
        - fastlane/test_output/report.junit
