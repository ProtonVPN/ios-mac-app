# Jobs for linting/testing/etc. vpncore library.
# Stages and other useful stuff can be found in /.gitlab-ci.yml file


core_ios_unit_tests:
  extends:
    - .mr_job_template
    - .ios_job_template
  stage: core_unit_tests
  script:
    - xcrun simctl create ${CI_JOB_ID} com.apple.CoreSimulator.SimDeviceType.iPhone-11 `xcrun simctl list runtimes | grep iOS | awk '{print $NF}'`
    - fastlane ios_core_test
    - scripts/print-coverage.sh fastlane/test_output/vpncore-ios.xcresult vpncore.framework
    - xcrun xccov view --report --json fastlane/test_output/vpncore-ios.xcresult > coverage.json
    - xcc generate coverage.json fastlane/test_output cobertura-xml --exclude-packages Tests
  after_script:
    - xcrun simctl delete $CI_JOB_ID
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: fastlane/test_output/cobertura.xml
      junit:
        - fastlane/test_output/report.junit

core_macos_unit_tests:
  extends: .mac_job_template
  stage: core_unit_tests
  tags:
    - macOS_vpn
  script:
    - fastlane macos_core_test
    - scripts/print-coverage.sh fastlane/test_output/vpncore-macos.xcresult vpncore.framework
    - xcrun xccov view --report --json fastlane/test_output/vpncore-macos.xcresult > coverage.json
    - xcc generate coverage.json fastlane/test_output cobertura-xml --exclude-packages Tests
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: fastlane/test_output/cobertura.xml
      junit:
        - fastlane/test_output/report.junit
