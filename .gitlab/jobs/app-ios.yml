# Jobs for linting/testing/etc. Proton VPN iOS app.
# Stages and other useful stuff can be found in /.gitlab-ci.yml file
    

ios_unit_tests_all:
  extends:
    - .mr_job_template
    - .ios_job_template
  stage: apps_unit_tests
  script:
    - xcrun simctl create ${CI_JOB_ID} com.apple.CoreSimulator.SimDeviceType.iPhone-11 `xcrun simctl list runtimes | grep iOS | awk '{print $NF}'`
    - cd apps/ios/ProtonVPN/ && ../../../scripts/prepare_obfuscated_constants.sh && cd ../../../
    - defaults write com.apple.iphonesimulator ConnectHardwareKeyboard 0 # Fixed UI tests failing on secure field
    - fastlane ios_app_unit_test_all
    - scripts/print-coverage.sh fastlane/test_output/ProtonVPN-iOS.xcresult ProtonVPN.app
    - xcrun xccov view --report --json fastlane/test_output/ProtonVPN-iOS.xcresult > coverage.json
    - xcc generate coverage.json fastlane/test_output cobertura-xml --exclude-packages ProtonVPNTests
  after_script:
    - xcrun simctl delete $CI_JOB_ID
    - rm apps/ios/ProtonVPNUITests/credentials_bf22.plist
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: fastlane/test_output/cobertura.xml
      junit:
        - fastlane/test_output/report.junit


ios_ui_tests_smoke:
  extends:
    - .mr_job_template
    - .ios_job_template
  stage: apps_ui_tests
  script:
    - xcrun simctl create ${CI_JOB_ID} com.apple.CoreSimulator.SimDeviceType.iPhone-11 `xcrun simctl list runtimes | grep iOS | awk '{print $NF}'`
    - cd apps/ios/ProtonVPN/ && ../../../scripts/prepare_obfuscated_constants.sh && cd ../../../
    - defaults write com.apple.iphonesimulator ConnectHardwareKeyboard 0 # Fixed UI tests failing on secure field
    - fastlane ios_app_ui_test_smoke
    - scripts/print-coverage.sh fastlane/test_output/ProtonVPN-iOS.xcresult ProtonVPN.app
  after_script:
    - xcrun simctl delete $CI_JOB_ID
    - rm apps/ios/ProtonVPNUITests/credentials_bf22.plist
  when: manual
  artifacts:
    reports:
      junit:
        - fastlane/test_output/report.junit

ios_ui_tests_all:
  extends:
    - .ios_job_template
  stage: apps_ui_tests
  script:
    - xcrun simctl create ${CI_JOB_ID} com.apple.CoreSimulator.SimDeviceType.iPhone-11 `xcrun simctl list runtimes | grep iOS | awk '{print $NF}'`
    - cd apps/ios/ProtonVPN/ && ../../../scripts/prepare_obfuscated_constants.sh && cd ../../../
    - defaults write com.apple.iphonesimulator ConnectHardwareKeyboard 0 # Fixed UI tests failing on secure field
    - fastlane ios_app_ui_test_all
    - scripts/print-coverage.sh fastlane/test_output/ProtonVPN-iOS.xcresult ProtonVPN.app
  after_script:
    - xcrun simctl delete $CI_JOB_ID
    - rm apps/ios/ProtonVPNUITests/credentials_bf22.plist
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always
    - when: manual
  artifacts:
    reports:
      junit:
        - fastlane/test_output/report.junit
