# Jobs for linting/testing/etc. BugReport library.
# Stages and other useful stuff can be found in /.gitlab-ci.yml file

review_lint:
  stage: linting
  tags:
    - iOS_ARM
  script:
    - cd libraries/Review
    - ../../Pods/SwiftLint/swiftlint --strict --reporter junit > ../../swiftlint.xml
  allow_failure: false
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: $CI_COMMIT_BRANCH == "develop"
      when: always
    - when: manual
  artifacts:
    name: "review-report-lint-$CI_COMMIT_TAG"
    paths:
      - swiftlint.xml
    reports:
      junit:
        - swiftlint.xml
    expire_in: 90 days


review_unit_tests:
  stage: core_unit_tests
  tags:
    - iOS_ARM
  script:
    - cd libraries/Review/
    - swift test --enable-code-coverage
    - mkdir -p ../../fastlane/test_output
    - XCODE_PATH=`xcode-select -p`
    - ARCH="$(uname -m)"
    - $XCODE_PATH/Toolchains/XcodeDefault.xctoolchain/usr/bin/llvm-cov export -instr-profile=.build/$ARCH-apple-macosx/debug/codecov/default.profdata .build/$ARCH-apple-macosx/debug/ReviewPackageTests.xctest/Contents/MacOS/ReviewPackageTests -format=lcov > ../../fastlane/test_output/Review.lcov
    - cd -
    - python3 `pip3 show lcov_cobertura | grep Location | cut -d " " -f2`/lcov_cobertura.py fastlane/test_output/Review.lcov -o fastlane/test_output/Review.xml
    - scripts/print-coverage-cobertura.sh fastlane/test_output/Review.xml
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: $CI_COMMIT_BRANCH == "develop"
      when: always
    - when: manual
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: fastlane/test_output/Review.xml

