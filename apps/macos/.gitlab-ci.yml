include:
  - project: 'agarroux/publish-github'
    ref: master
    file: '/jobs/release.gitlab-ci.yml'

stages:
  - linting
  - unit_tests
  - mirror

variables:
  LC_ALL: "en_US.UTF-8"
  LANG: "en_US.UTF-8"
  GEM_HOME: "$CI_PROJECT_DIR/gem"
  PUBLIC_REPO_URL: git@github.com:ProtonVPN/mac-app.git

.before_script_mac: &before_script_mac
  - rm -fr ../vpncore || true # ignore failure to delete
  - git clone -b ${CI_COMMIT_REF_NAME} https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.protontech.ch/apple/vpn/vpncore.git ../vpncore || git clone -b develop https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.protontech.ch/apple/vpn/vpncore.git ../vpncore
  - rm -fr ../tunnelkit || true # ignore failure to delete
  - git clone -b protonvpn2/keychain https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.protontech.ch/apple/vpn/tunnelkit.git ../tunnelkit # checkout the keychain_avoid branch
  - rm -fr ../pmnetworking || true # ignore failure to delete
  - git clone -b develop https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.protontech.ch/apple/shared/pmnetworking.git ../pmnetworking && (cd ../pmnetworking; git checkout 35b8e110bb15082073be8cf6d95440da954c9365)
  - cd ProtonVPNUITests/ && Scripts/prepare_credentials.sh && cd ..
  - cd ProtonVPN/ && ../../vpncore/Source/prepare_obfuscated_constants.sh && cd -
  - pod install

lint:
  stage: linting
  tags:
    - macOS_ARM
  before_script:
    - *before_script_mac
  script: Pods/SwiftLint/swiftlint --strict --reporter junit > swiftlint.xml
  allow_failure: false
  artifacts:
    name: "mac-lint-$CI_COMMIT_TAG"
    paths:
      - swiftlint.xml
    reports:
      junit:
        - swiftlint.xml
    expire_in: 90 days

unit_tests:
  dependencies: []
  stage: unit_tests
  before_script:
    - *before_script_mac
  script:
    - base64 -D -o Certificates.p12 <<< $DEVELOPER_CERTIFICATE
    - mkdir -pv ~/Library/MobileDevice/Provisioning\ Profiles/
    - base64 -D -o ~/Library/MobileDevice/Provisioning\ Profiles/ProtonVPN_Mac_Development_PP.provisionprofile <<< $DEVELOPMENT_PROFILE
    - base64 -D -o ~/Library/MobileDevice/Provisioning\ Profiles/ProtonVPN_OpenVPN_Development_PP.provisionprofile <<< $DEVELOPMENT_PROFILE_OVPN
    - pod install
    - fastlane ci_test
    - fastlane/print-coverage.sh fastlane/test_output/ProtonVPN.xcresult
  after_script: # Cleanup
    - rm -f ~/Library/MobileDevice/Provisioning\ Profiles/ProtonVPN_Mac_Development_PP.provisionprofile
    - rm -f ~/Library/MobileDevice/Provisioning\ Profiles/ProtonVPN_OpenVPN_Development_PP.provisionprofile
  tags:
    - macOS_ARM
  artifacts:
    name: "macos-tests-$CI_COMMIT_TAG"
    when: always
    paths:
      - fastlane/test_output/
    expire_in: 3 days
    reports:
      junit:
        - fastlane/test_output/report.junit


# --- Sync to github ---
release-publish-github:
  stage: mirror
  variables:
    RELEASE_SYNC_PUBLIC_URL: "$PUBLIC_REPO_URL"
    RELEASE_SYNC_FROM_BRANCH: 'master'
  extends: .release-sync-commit-shared

release-publish-github-2.0:
  stage: mirror
  variables:
    RELEASE_SYNC_PUBLIC_URL: "$PUBLIC_REPO_URL"
    RELEASE_SYNC_TO_BRANCH: 'release-candidate-2.0.0'
    RELEASE_SYNC_FROM_BRANCH: 'release-candidate-2.0.0'
  extends: .release-sync-commit-shared

release-publish-github-tags:
  stage: mirror
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^(ios|release-mac)-[\d]+\.[\d]+\.[\d]+$/
  variables:
    RELEASE_SYNC_PUBLIC_URL: "$PUBLIC_REPO_URL"
  extends: .release-sync-tags-shared


