include:
  - project: 'agarroux/publish-github'
    ref: master
    file: '/jobs/release.gitlab-ci.yml'

stages:
  - linting
  - unit_tests
  - screenshots
  - beta
  - beta_staging
  - mirror

variables:
  LC_ALL: "en_US.UTF-8"
  LANG: "en_US.UTF-8"
  GEM_HOME: "$CI_PROJECT_DIR/gem"
  PUBLIC_REPO_URL: git@github.com:ProtonVPN/ios-app.git

.before_script_mac: &before_script_mac
  - rm -fr ../vpncore || true # ignore failure to delete
  - git clone --depth 1 -b ${CI_COMMIT_REF_NAME} https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.protontech.ch/apple/vpn/vpncore.git ../vpncore || git clone --depth 1 -b develop https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.protontech.ch/apple/vpn/vpncore.git ../vpncore # checkout the same named branch, or default to develop branch
  - rm -fr ../pmchallenge || true # ignore failure to delete
  - git clone --depth 1 -b 0.0.2 https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.protontech.ch/apple/shared/pmchallenge.git ../pmchallenge
  - rm -fr ../pmnetworking || true # ignore failure to delete
  - git clone -b develop https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.protontech.ch/apple/shared/pmnetworking.git ../pmnetworking && (cd ../pmnetworking; git checkout 35b8e110bb15082073be8cf6d95440da954c9365) 
  - cd ProtonVPNUITests/ && Scripts/prepare_credentials.sh && cd ..
  - pod install

lint:
  stage: linting
  tags:
    - iOS
  before_script:
    - *before_script_mac
  script:
    - Pods/SwiftLint/swiftlint --strict --reporter junit > swiftlint.xml
  allow_failure: false
  artifacts:
    name: "ios-lint-$CI_COMMIT_TAG"
    paths:
      - swiftlint.xml
    reports:
      junit:
        - swiftlint.xml
    expire_in: 90 days

unit_tests:
   dependencies: []
   stage: unit_tests
   allow_failure: false
   before_script:
     - *before_script_mac
   script:
     - cd ProtonVPN/ && ../../vpncore/Source/prepare_obfuscated_constants.sh && cd ..
     - defaults write com.apple.iphonesimulator ConnectHardwareKeyboard 0 # Fixed UI tests failing on secure field
     - fastlane test
     - fastlane/print-coverage.sh fastlane/test_output/ProtonVPN.xcresult
   tags:
     - iOS
   artifacts:
     name: "ios-tests-$CI_COMMIT_TAG"
     when: always
     paths:
       - fastlane/test_output/
     expire_in: 3 days
     reports:
       junit:
         - fastlane/test_output/report.junit

screenshots:
  stage: screenshots
  before_script:
    - *before_script_mac
  script:
    - fastlane screenshots
  tags:
    - iOS
  artifacts:
    name: "ios-screens"
    when: always
    paths:
      - fastlane/screenshots/
    expire_in: 3 days
  only:
    - schedules

testflight_internal:
  stage: beta
  before_script:
    - *before_script_mac
  script:
    - curl -sL https://sentry.io/get-cli/ | bash || true
    - base64 -D -o Certificates.p12 <<< $DISTRIBUTION_CERTIFICATE
    - fastlane sigh download_all --download_xcode_profiles
    - cd ProtonVPN/ && ../../vpncore/Source/prepare_obfuscated_constants.sh && cd ..
    - fastlane ios internal_beta changelog:"Latest $CI_COMMIT_REF_NAME build"
  tags:
    - iOS-deploy
  environment:
    name: deployment
  when: manual
  artifacts:
    name: "ios-build-nr"
    when: always
    paths:
      - .last_build_nr
    expire_in: 7 days

testflight_staging:
  stage: beta_staging
  dependencies:
    - testflight_internal # We need a build number generated there
  before_script:
    - *before_script_mac
  script:
    - curl -sL https://sentry.io/get-cli/ | bash || true
    - base64 -D -o Certificates.p12 <<< $DISTRIBUTION_CERTIFICATE
    - fastlane sigh download_all --download_xcode_profiles
    - cd ProtonVPN/ && ../../vpncore/Source/prepare_obfuscated_constants.sh && cd ..
    - fastlane ios internal_staging changelog:"Latest $CI_COMMIT_REF_NAME build"
  tags:
    - iOS-deploy
  environment:
    name: deployment
  when: manual


# --- Sync to github ---
release-publish-github:
  stage: mirror
  variables:
    RELEASE_SYNC_PUBLIC_URL: "$PUBLIC_REPO_URL"
    RELEASE_SYNC_FROM_BRANCH: 'master'
  extends: .release-sync-commit-shared

release-publish-github-tags:
  stage: mirror
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^(ios|release-mac)-[\d]+\.[\d]+\.[\d]+$/
  variables:
    RELEASE_SYNC_PUBLIC_URL: "$PUBLIC_REPO_URL"
  extends: .release-sync-tags-shared
