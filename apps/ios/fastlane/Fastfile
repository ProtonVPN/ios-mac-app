# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

update_fastlane

default_platform(:ios)

platform :ios do
    desc "Run all the tests"
    lane :test do
        clear_derived_data
        scan(
            scheme: "ProtonVPN",
            clean: true,
            xcargs: "-UseModernBuildSystem=NO",
            result_bundle: true,
            skip_slack: true
        )
    end

    lane :internal_beta do |options|
        if !options[:changelog]
            abort("Please provide a changelog by appending`changelog:\"<Log notes>\"` to running this lane")
        elsif !options[:username]
            abort("Please provide an App Store Connect username with appropriate permisions by running the command with `username:\"<App Store Connect username>\"`")
        end

        xcode_select("/Applications/Xcode.app")

        sh("./sync_version_number.sh") # sync's the app target's version number with the other targets
        sh("./increment_build_number.sh")

        # Release build
        build_app(
            scheme: "ProtonVPN",
            clean: true,
            output_directory: "build/",
            export_method: "app-store",
            export_options: {
                provisioningProfiles: {
                    "ch.protonmail.vpn" => "ProtonVPN Release",
                    "ch.protonmail.vpn.OpenVPN-Extension" => "ProtonVPN OpenVPN Release",
                    "ch.protonmail.vpn.widget" => "ProtonVPN Widget Release",
                    "ch.protonmail.vpn.Siri-Shortuct-Handler" => "ProtonVPN Siri Shortcuts Release"
                }
            }
        )
        upload_to_testflight(
            username: options[:username],
            team_name: "Proton Technologies AG",
            groups: ["Internal Members"],
            changelog: options[:changelog],
            distribute_external: true,
            demo_account_required: true
        )

        # Debug build
        build_app(
            scheme: "ProtonVPN Staging",
            clean: true,
            output_directory: "build/",
            export_method: "app-store",
            export_options: {
                provisioningProfiles: {
                    "ch.protonmail.vpn.debug" => "ProtonVPN Debug",
                    "ch.protonmail.vpn.debug.OpenVPN-Extension" => "ProtonVPN OpenVPN Debug",
                    "ch.protonmail.vpn.debug.widget" => "ProtonVPN Widget Debug",
                    "ch.protonmail.vpn.debug.Siri-Shortuct-Handler" => "ProtonVPN Siri Shortcuts Debug"
                }
            }
        )
        upload_to_testflight(
            username: options[:username],
            team_name: "Proton Technologies AG",
        )
    end
        
    desc "Make screenshots for every language on every device"
    lane :screenshots do
    
        clear_derived_data
        # First tests are run with build
        capture_ios_screenshots(
            clean: true,
            devices: [ "iPhone 8" ],
            languages: [ "en-US" ],
            test_without_building: false,
            derived_data_path: "~/Library/Developer/Xcode/DerivedData/ProtonVPN-CI-screens"
        )
        
        # Other tests are run without building
        capture_ios_screenshots(
            clean: false,
            test_without_building: true,
            derived_data_path: "~/Library/Developer/Xcode/DerivedData/ProtonVPN-CI-screens"
        )
        
        # Post URL with results to slack
        url = ENV["IOS_VPNTEST_SCREENSHOTS_URL"].sub('[jobid]', ENV["CI_JOB_ID"])
        slack(message: "Latest UI screenshots will be available for the next 3 days at " + url )
        
    end
    
end
