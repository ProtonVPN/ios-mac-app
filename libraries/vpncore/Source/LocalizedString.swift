//
//  LocalizedStrings.swift
//  vpncore - Created on 26.06.19.
//
//  Copyright (c) 2019 Proton Technologies AG
//
//  This file is part of vpncore.
//
//  vpncore is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  vpncore is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with vpncore.  If not, see <https://www.gnu.org/licenses/>.

import Foundation

public class LocalizedString {
    
    // MARK: - General
    public static let cancel = NSLocalizedString("_cancel", comment: "Common word")
    public static let connect = NSLocalizedString("_connect", comment: "Common word")
    public static let connected = NSLocalizedString("_connected", comment: "Common word")
    public static let delete = NSLocalizedString("_delete", comment: "Common word")
    public static let disconnect = NSLocalizedString("_disconnect", comment: "Common word")
    public static let disconnected = NSLocalizedString("_disconnected", comment: "Common word")
    public static let disconnecting = NSLocalizedString("_disconnecting", comment: "Status of VPN connection reported by Siri")
    public static let done = NSLocalizedString("_done", comment: "Common word")
    public static let edit = NSLocalizedString("_edit", comment: "Common word")
    public static let ok = NSLocalizedString("_ok", comment: "Common word")
    public static let save = NSLocalizedString("_save", comment: "Common word")
    public static let unavailable = NSLocalizedString("_unavailable", comment: "Common word")
    public static let warning = NSLocalizedString("_warning", comment: "Used as a title in alerts/modals")
    public static let upgrade = NSLocalizedString("_upgrade", comment: "Button in many placen in both iOS and MacOS apps")
    public static let upgradeSubscription = NSLocalizedString("_upgrade_subscription", comment: "iOS: Plan selection during plan upgarde, button insettings screen")
    public static let settingsManageSubscription = NSLocalizedString("_manage_subscription", comment: "iOS: Button in settings screen")
    public static let upgradeRequired = NSLocalizedString("_upgrade_required", comment: "iOS & MacOS: text near country or server; MacOS: title of several alerts")
    public static let maintenance = NSLocalizedString("_maintenance", comment: "Server status in many places in iOS and MacOS apps")
    public static let quit = NSLocalizedString("_quit", comment: "MacOS: quit application button in custom status menu")
    public static let quitWarning = NSLocalizedString("_quit_warning", comment: "MacOS: alert show before quitting app if VPN is connected")
    public static let enabled = NSLocalizedString("_enabled", comment: "Common word")
    public static let disabled = NSLocalizedString("_disabled", comment: "Common word")
    public static let disable = NSLocalizedString("_disable", comment: "Button in some alerts")
    public static let report = NSLocalizedString("_report", comment: "Button in Kill switch error alert")
    public static let ignore = NSLocalizedString("_ignore", comment: "Button in Kill switch error alert")
    public static let `continue` = NSLocalizedString("_continue", comment: "Button in some alerts")
    public static let networkUnreachable = NSLocalizedString("_network_unreachable", comment: "iOS: quick connect widget")
    public static let notConnectedToTheInternet = NSLocalizedString("_not_connected_to_the_internet", comment: "Title in no internet alert")
    public static let vpnConnectionActive = NSLocalizedString("_vpn_connection_active", comment: "MacOS: alert before disconnection on SecureCore state change")
    public static let logOut = NSLocalizedString("_log_out", comment: "iOS: button in settings screen")
    public static let logOutWarning = NSLocalizedString("_log_out_warning", comment: "iOS: Logout alert")
    public static let logOutWarningLong = NSLocalizedString("_log_out_warning_long", comment: "MacOS: Logout alert")
    public static let changeProtocolDisconnectWarning = NSLocalizedString("_change_protocol_disconnect_warning", comment: "Warning text that changing the VPN protocol will require the current VPN session to be disconnected")
    public static let loadingScreenSlogan = NSLocalizedString("_loading_screen_slogan", comment: "Slogan text under the logo in may places in iOS and MacOS apps")
    public static let help = NSLocalizedString("_help", comment: "Main app menu; User with \"ProtonVPN\" inside the same main menu as a name for item that opens help page.")
    public static let learnMore = NSLocalizedString("_learn_more", comment: "MacOS: link in login screen")
    public static let ip = NSLocalizedString("_ip", comment: "iOS: Status view")
    public static let ipValue = NSLocalizedString("_ip_value", comment: "%@ is an IP address e.g. IP: 123.45.67.890")
    public static let publicIp = NSLocalizedString("_public_ip", comment: "%@ is an IP address e.g. Public IP: 123.45.67.890")
    public static let quickConnect = NSLocalizedString("_quick_connect", comment: "Several places in both iOS and Mac apps")
    public static let secureCore = NSLocalizedString("_secure_core", comment: "Used in many places in MacOS app")
    public static let secureCoreCountry = NSLocalizedString("_secure_core_country", comment: " %@ is a country e.g. Secure Core Switzerland")
    public static let country = NSLocalizedString("_country", comment: "Profile create/edit menu")
    public static let showProtonVpn = NSLocalizedString("_show_protonvpn", comment: "MacOS: button in custom status menu")
    public static let preparingConnection = NSLocalizedString("_preparing_connection", comment: "MacOS: connecting overlay")
    public static let connectingTo = NSLocalizedString("_connecting_to", comment: "MacOS: connecting overlay. %@ is a country followed by a server e.g. Connecting to Switzerland CH#1")
    public static let connectedTo = NSLocalizedString("_connected_to", comment: "iOS status view")
    public static let connecting = NSLocalizedString("_connecting", comment: "iOS: main button in tabbar during connecting to vpn phase")
    public static let connectingDotDotDot = NSLocalizedString("_connecting...", comment: "iOS: connection bar, iOS widget")
    public static let connectingVpn = NSLocalizedString("_connecting_vpn", comment: "MacOS: connecting overlay. %@ is a failure or timeout e.g. Connecting failed")
    public static let vpnConnected = NSLocalizedString("_connected_to_vpn", comment: "MacOS: connecting overlay.  %@ is a country followed by a server e.g. Connected to Switzerland CH#1")
    public static let notConnected = NSLocalizedString("_not_connected", comment: "iOS: connection bar; Main mac app menu item;")
    public static let youAreNotConnected = NSLocalizedString("_you_are_not_connected", comment: "MacOS: text in main window")
    public static let tryAgain = NSLocalizedString("_try_agian", comment: "MacOS: button in connecting overlay")
    public static let retry = NSLocalizedString("_retry", comment: "Button in some alerts")
    public static let freeServers = NSLocalizedString("_free_servers", comment: "iOS: section header in countries list")
    public static let basicServers = NSLocalizedString("_basic_servers", comment: "iOS: section header in countries list")
    public static let plusServers = NSLocalizedString("_plus_servers", comment: "iOS: section header in countries list")
    public static let testServers = NSLocalizedString("_test_servers", comment: "iOS: section header in countries list")
    public static let initializingConnection = NSLocalizedString("_initializing_connection", comment: "MacOS: connecting overlay")
    public static let successfullyConnected = NSLocalizedString("_successfully_connected", comment: "MacOS: connecting overlay")
    public static let failed = NSLocalizedString("_failed", comment: "MacOS: connecting overlay")
    public static let connectionFailed = NSLocalizedString("_connection_failed", comment: "Connection error translation. iOS quick connect widget: text shown on error.")
    public static let timedOut = NSLocalizedString("_timed_out", comment: "MacOS: connecting overlay")
    public static let status = NSLocalizedString("_status", comment: "iOS status view")
    public static let sessionTime = NSLocalizedString("_session_time", comment: "iOS status view")
    public static let location = NSLocalizedString("_location", comment: "iOS status view")
    public static let city = NSLocalizedString("_city", comment: "iOS status view")
    public static let technicalDetails = NSLocalizedString("_technical_details", comment: "iOS status view")
    public static let on = NSLocalizedString("_switch_side_button_on", comment: "Custom switch on")
    public static let off = NSLocalizedString("_switch_side_button_off", comment: "Custom switch off")
    
    public static func countriesCount(_ number: Int) -> String {
        return String.localizedStringWithFormat(NSLocalizedString("_countries_count", comment: "iOS advandced plan features view. %@ is changed with the number of countries."), number)
    }
    public static func countriesCountPlus(_ number: Int) -> String {
        return String.localizedStringWithFormat(NSLocalizedString("_countries_count_plus", comment: "iOS advandced plan features view. %@ is changed with the number of countries. has plus after the number."), number)
    }
    public static let countriesFree = NSLocalizedString("_countries_free", comment: "iOS: countries list section header")
    public static let countriesPremium = NSLocalizedString("_countries_premium", comment: "iOS: countries list section header")
    public static let close = NSLocalizedString("_close", comment: "Common word")
    
    // MARK: - Notifications
    public static let killSwitchBlockingConnection = NSLocalizedString("_kill_switch_blocking_connection", comment: "Disconnect notification")
    public static let alwaysOnWillReconnect = NSLocalizedString("_always_on_will_reconnect", comment: "Disconnect notification")
    
    // MARK: - About
    public static let about = NSLocalizedString("_about", comment: "MacOS: About window title")
    public static let version = NSLocalizedString("_version", comment: "iOS setting: after this word actual version and build number are appended")
    public static let versionCurrent = NSLocalizedString("_version_current", comment: "MacOS: About window")
    public static let releaseDate = NSLocalizedString("_release_date", comment: "MacOS: About window")
    public static let changelog = NSLocalizedString("_changelog", comment: "MacOS: About window")
    public static let acknowledgements = NSLocalizedString("_acknowledgements", comment: "MacOS: About window")
    
    // MARK: - Login & Signup
    public static let username = NSLocalizedString("_username", comment: "Used in sign-in, sign-up and in settings")
    public static let password = NSLocalizedString("_password", comment: "Used in sign-in, sign-up")
    public static let passwordConfirm = NSLocalizedString("_password_confirm", comment: "Sign-up form")
    public static let show = NSLocalizedString("_show", comment: "Show/hide password switch")
    public static let hide = NSLocalizedString("_hide", comment: "Show/hide password switch")
    public static let login = NSLocalizedString("_login", comment: "MacOS: Login button")
    public static let logIn = NSLocalizedString("_log_in", comment: "iOS: Login button in several places")
    public static let rememberLogin = NSLocalizedString("_remember_login", comment: "MacOS: label in login and settings screens")
    public static let startOnBoot = NSLocalizedString("_start_on_boot", comment: "MacOS: label in login and settings screens")
    public static let createAccount = NSLocalizedString("_create_account", comment: "MacOS: button in login screen")
    public static let needHelp = NSLocalizedString("_need_help", comment: "MacOS: button in login screen")
    public static let resetPassword = NSLocalizedString("_reset_password", comment: "MacOS: button in login screen")
    public static let forgotUsername = NSLocalizedString("_forgot_username", comment: "MacOS: button in login screen")
    public static let forgotPassword = NSLocalizedString("_forgot_password", comment: "iOS: button in login screen")
    public static let signUp = NSLocalizedString("_sign_up", comment: "iOS: button in login and onboarding screens")
    public static let warningVpnSessionIsActive = NSLocalizedString("_warning_vpn_session_is_active", comment: "MacOS: alert shown during login if already connected to VPN")
    public static let enterEmailAddress = NSLocalizedString("_enter_email_address", comment: "iOS: placeholder for email field in signup and email verification screens")
    public static let phoneCountryCodePlaceholder = NSLocalizedString("_phone_country_code_placeholder", comment: "iOS: placeholder in phone verification screen")
    public static let phoneNumberPlaceholder = NSLocalizedString("_phone_number_placeholder", comment: "iOS: placeholder in phone verification screen")
    public static let selectPhoneCountryCode = NSLocalizedString("_select_phone_country_code", comment: "iOS: title of phone country code selection screen")
    public static let searchPhoneCountryCodePlaceholder = NSLocalizedString("_search_phone_country_code_placeholder", comment: "iOS: placeholder in phone country code selection screen")
    public static let alreadyHaveAccount = NSLocalizedString("_already_have_account", comment: "iOS: button for switching from sign-up to sign-in screen")
    public static let getVerificationEmail = NSLocalizedString("_get_verification_email", comment: "iOS: Button in email verification screen")
    public static let getVerificationSms = NSLocalizedString("_get_verification_sms", comment: "iOS: Button in SMS verification screen")
    public static let selectVerificationOption = NSLocalizedString("_select_verification_option", comment: "iOS: text in human verification options screen")
    public static let selectVerificationOptionTopMessage = NSLocalizedString("_select_verification_option_top_message", comment: "iOS: text in human verification options screen")
    public static let useCaptchaVerification = NSLocalizedString("_use_captcha_verification", comment: "iOS: human verification option select button")
    public static let useOtherEmailAddress = NSLocalizedString("_use_other_email_address", comment: "iOS: human verification option select button")
    public static let useSMSVerification = NSLocalizedString("_use_sms_verification", comment: "iOS: human verification option select button")
    public static let requestInvitation = NSLocalizedString("_request_invitation", comment: "iOS: human verification option select button")
    public static let enterVerificationCode = NSLocalizedString("_enter_verification_code", comment: "iOS: placeholder for code in human verification code form")
    public static let submitVerificationCode = NSLocalizedString("_submit_verification_code", comment: "iOS: button in human verification code form")
    public static let resendCode = NSLocalizedString("_resend_code", comment: "iOS: button in human verification code form")
    public static let resendNoCode = NSLocalizedString("_resend_no_code", comment: "iOS: button in human verification code form")
    public static let resendSuccess = NSLocalizedString("_resend_success", comment: "iOS: message after human verification code resending")
    public static let termsAndConditions = NSLocalizedString("_terms_and_conditions", comment: "iOS: link inside text under sign-up form")
    public static let termsAndConditionsDisclaimer = NSLocalizedString("_terms_and_conditions_disclaimer", comment: "iOS: text under sign-up form. %@1 is a link with a title of 'Terms and Conditions'; %@2 is a link with a title of 'Privacy Policy'")
    public static let privacyPolicy = NSLocalizedString("_privacy_policy", comment: "iOS: link inside text under sign-up form")
    public static let verificationInstructions = NSLocalizedString("_verification_instructions", comment: "iOS: text in human verification code form")
    public static let setupComplete = NSLocalizedString("_setup_complete", comment: "iOS: title of the screen after successfull purchase")
    public static let setupCompleteFree = NSLocalizedString("_setup_complete_free", comment: "iOS: title of the screen after successfull purchase")
    public static let setupCompleteBasic = NSLocalizedString("_setup_complete_basic", comment: "iOS: title of the screen after successfull purchase")
    public static let setupCompletePlus = NSLocalizedString("_setup_complete_plus", comment: "iOS: title of the screen after successfull purchase")
    public static let dataDisclaimerTitle = NSLocalizedString("_data_disclaimer_title", comment: "iOS: data disclaimen screen")
    public static let dataDisclaimerText = NSLocalizedString("_data_disclaimer_text", comment: "iOS: data disclaimen screen")
    public static let dataDisclaimerUserDetails = NSLocalizedString("_data_disclaimer_user_details", comment: "iOS: data disclaimen screen")
    public static let dataDisclaimerDeviceDetails = NSLocalizedString("_data_disclaimer_device_details", comment: "iOS: data disclaimen screen")
    public static let dataDisclaimerAgree = NSLocalizedString("_data_disclaimer_agree", comment: "iOS: data disclaimen screen button")
    
    // MARK: - Map
    public static let map = NSLocalizedString("_map", comment: "iOS: Map screen title and tabbar item")
    public static let mapShow = NSLocalizedString("_map_show", comment: "MacOS: Map view toggle button accessibility label (used by screen readers)")
    public static let mapHide = NSLocalizedString("_map_hide", comment: "MacOS: Map view toggle button accessibility label (used by screen readers)")
    
    // MARK: - Servers
    public static let torDescription = NSLocalizedString("_tor_description", comment: "Description shown together with server info icon")
    public static let p2pDescription = NSLocalizedString("_p2p_description", comment: "Description shown together with server info icon")
    public static let premiumDescription = NSLocalizedString("_premium_description", comment: "Description shown together with server info icon")
    public static let viaCountry = NSLocalizedString("_via_country", comment: "Used for SecureCore connection labels. %@ is a country e.g. via Switzerland")
    public static let via = NSLocalizedString("_via", comment: "Used in several places in iOS to make SecureCore server description, similar to 'viaCountry' translation")
    public static let load = NSLocalizedString("_load", comment: "Server load. Used together with actual server load in percents.")
    public static let countries = NSLocalizedString("_countries", comment: "iOS: Countries screen title, tab bar item title; MacOS: TabBar tab title;")
    public static let planDoesNotIncludeSecureCore = NSLocalizedString("_plan_does_not_include_secure_core", comment: "MacOS: SecureCore warning alert when users plan has to be upgraded")
    public static let learnMoreAboutSecureCore = NSLocalizedString("_learn_more_about_secure_core", comment: "MacOS: SecureCore warning alert when users plan has to be upgraded")
    public static let searchForCountry = NSLocalizedString("_search_for_country", comment: "MacOS: placeholder for country search")
    public static let secureCoreInfo = NSLocalizedString("_secure_core_info", comment: "MacOS: secure core tooltip")
    public static let viewToggleWillCauseDisconnect = NSLocalizedString("_view_toggle_will_cause_disconnect", comment: "Text in warning screen before actions that will disconnect VPN")
    public static let serverLoad = NSLocalizedString("_server_load", comment: "MacOS: label in server info view (shown after click on Info icon in countries list)")
    public static let serverIp = NSLocalizedString("_server_ip", comment: "MacOS: label in server info view (shown after click on Info icon in countries list)")
    public static let autoAssigned = NSLocalizedString("_auto_assigned", comment: "MacOS: label in server info view (shown after click on Info icon in countries list)")
    public static let premiumServer = NSLocalizedString("_premium_server", comment: "MacOS: label in server info view (shown after click on Info icon in countries list)")
    public static let standard = NSLocalizedString("_standard", comment: "MacOS profile form: feature selection value")
    public static let p2p = NSLocalizedString("_p2p", comment: "MacOS profile form: feature selection value; iOS: country.server description in countries list;")
    public static let tor = NSLocalizedString("_tor", comment: "MacOS profile form: feature selection value; iOS: country.server description in countries list;")
    public static let p2pServer = NSLocalizedString("_p2p_server", comment: "MacOS: label in server info view (shown after click on Info icon in countries list)")
    public static let torServer = NSLocalizedString("_tor_server", comment: "MacOS: label in server info view (shown after click on Info icon in countries list)")
    
    // MARK: - Profiles
    public static let profile = NSLocalizedString("_profile", comment: "MacOS Profiles Overview: Table column header")
    public static let profiles = NSLocalizedString("_profiles", comment: "MacOS: menu item, profiles window main header, sidebar tab title; iOS: Profiles screen title and tabbar item title;")
    public static let recommended = NSLocalizedString("_recommended", comment: "iOS: table header section in profiles screen")
    public static let myProfiles = NSLocalizedString("_my_profiles", comment: "iOS: table header section in profiles screen")
    public static let saveAsProfile = NSLocalizedString("_save_as_profile", comment: "Button")
    public static let profileDeletedSuccessfully = NSLocalizedString("_profile_deleted_successfully", comment: "iOS: Success message on profile deletion")
    public static let profileDeletionFailed = NSLocalizedString("_profile_deletion_failed", comment: "iOS: Error message if profile can't be deleted")
    public static let createNewProfile = NSLocalizedString("_create_new_profile", comment: "MacOS: Buttons in several places; iOS: profile creation screen title")
    public static let manageProfiles = NSLocalizedString("_manage_profiles", comment: "MacOS: button in profiles tab in main window")
    public static let profilesOverview = NSLocalizedString("_profiles_overview", comment: "MacOS: profiles window title")
    public static let profileCreatedSuccessfully = NSLocalizedString("_profile_created_successfully", comment: "iOS: success message after profile is saved")
    public static let profileCreationFailed = NSLocalizedString("_profile_creation_failed", comment: "iOS: failure message after profile is saved")
    public static let profileEditedSuccessfully = NSLocalizedString("_profile_edited_successfully", comment: "iOS: success message after profile is saved")
    public static let overview = NSLocalizedString("_overview", comment: "MacOS menu item; MacOS Profiles tab title;")
    public static let connection = NSLocalizedString("_connection", comment: "MacOS Profiles Overview: Table column header; MacOS Settings Tab title;")
    public static let action = NSLocalizedString("_action", comment: "MacOS Profiles Overview: Table header for buttons column")
    public static let fastest = NSLocalizedString("_fastest", comment: "Used for both profile description when fastest server option is selected and Plan speed description")
    public static let fastestAvailableServer = NSLocalizedString("_fastest_available_server", comment: "Profile create/change form")
    public static let fastestConnection = NSLocalizedString("_fastest_connection", comment: "iOS: Predefined profile with fastest connection")
    public static let random = NSLocalizedString("_random", comment: "Profile create/change form and other places describing profile")
    public static let randomAvailableServer = NSLocalizedString("_random_available_server", comment: "Profile create/change form")
    public static let randomConnection = NSLocalizedString("_random_connection", comment: "iOS: Predefined profile with random server")
    public static let differentServerEachTime = NSLocalizedString("_different_server_each_time", comment: "Profile create/change form")
    public static let noDescriptionAvailable = NSLocalizedString("_no_description_available", comment: "Text used when no active server information is available")
    public static let createNewProfileHeader = NSLocalizedString("_create_profile", comment: "Profile create/change form")
    public static let profileSettings = NSLocalizedString("_profile_settings", comment: "Profile create/change form")
    public static let connectionSettings = NSLocalizedString("_connection_settings", comment: "Profile create/change form")
    public static let name = NSLocalizedString("_name", comment: "Profile create/change form")
    public static let enterProfileName = NSLocalizedString("_enter_profile_name", comment: "Profile create/change form")
    public static let color = NSLocalizedString("_color", comment: "Profile create/change form")
    public static let makeDefaultProfile = NSLocalizedString("_make_default_profile", comment: "Profile create/change form")
    public static let defaultProfileTooltip = NSLocalizedString("_default_profile_tooltip", comment: "Profile create/change form")
    public static let serverType = NSLocalizedString("_feature", comment: "Profile create/change form")
    public static let useSecureCore = NSLocalizedString("_use_secure_core", comment: "Profile create/change form")
    public static let selectCountry = NSLocalizedString("_select_country", comment: "Profile create/change form")
    public static let server = NSLocalizedString("_server", comment: "Profile create/change form")
    public static let selectServer = NSLocalizedString("_select_server", comment: "Profile create/change form")
    public static let profileNameIsRequired = NSLocalizedString("_profile_name_is_required", comment: "Error in profile create/change form")
    public static let profileNameIsTooLong = NSLocalizedString("_profile_name_is_too_long", comment: "Error in profile create/change form")
    public static let countrySelectionIsRequired = NSLocalizedString("_country_selection_is_required", comment: "Error when user hasn't selected profile country")
    public static let serverSelectionIsRequired = NSLocalizedString("_server_selection_is_required", comment: "Error when user hasn't selected profile server")
    public static let profileNameUnique = NSLocalizedString("_profile_name_needs_to_be_unique", comment: "Error when profile name is already taken")
    public static let currentSelectionWillBeLost = NSLocalizedString("_current_selection_will_be_lost", comment: "MacOS: profile creation cancel alert text")
    public static let checkIfFieldsPresent = NSLocalizedString("_check_if_fields_present", comment: "iOS: new profkle can't be created because not all required fields are filled")
    public static let deleteProfile = NSLocalizedString("_delete_profile", comment: "Button")
    public static let deleteProfileHeader = NSLocalizedString("_delete_profile_header", comment: "MacOS: profile deletion warning")
    public static let deleteProfileWarning = NSLocalizedString("_delete_profile_warning", comment: "MacOS: profile deletion warning")
    public static let selectProfileColor = NSLocalizedString("_select_profile_color", comment: "iOS: new profile screen")
    
    public static let planSpeedMedium = NSLocalizedString("_plan_speed_medium", comment: "Plan speed")
    public static let planSpeedHigh = NSLocalizedString("_plan_speed_high", comment: "Plan speed")
    public static let planSpeedFastests = NSLocalizedString("_plan_speed_fastest", comment: "Plan speed")
    
    // MARK: - Errors
    public static let errorInternalError = NSLocalizedString("_error_internal_error", comment: "Unknown error that has no better description")
    public static let errorVpnSessionIsActive = NSLocalizedString("_error_vpn_session_is_active", comment: "VPN session is active error")
    public static let errorUserHasNoVpnAccess = NSLocalizedString("_error_user_has_no_vpn_access", comment: "VPN credentials can't be loaded error")
    public static let errorUserHasNotSignedUp = NSLocalizedString("_error_user_has_not_signed_up", comment: "VPN credentials can't be loaded error")
    public static let errorUserIsOnWaitlist = NSLocalizedString("_error_user_is_on_waitlist", comment: "VPN credentials can't be loaded error")
    public static let errorUserCredentialsMissing = NSLocalizedString("_error_user_credentials_missing", comment: "VPN credentials can't be loaded error")
    public static let errorUserCredentialsExpired = NSLocalizedString("_error_user_credentials_expired", comment: "VPN credentials can't be loaded error")
    public static let errorVpnCredentialsMissing = NSLocalizedString("_error_vpn_credentials_missing", comment: "VPN credentials can't be loaded error")
    public static let errorDecode = NSLocalizedString("_error_decode", comment: "Error decoding an object")
    public static let errorEmailVerificationDisabled = NSLocalizedString("_error_email_verification_disabled", comment: "Internal application error")
    
    public static let errorFieldRequired = NSLocalizedString("_error_field_required", comment: "Form validation error")
    public static let errorFielWrongdEmailFormat = NSLocalizedString("_error_field_email_wrong_format", comment: "Form validation error")
    public static let errorFieldPasswordDontMatch = NSLocalizedString("_error_field_passwords_dont_match", comment: "Form validation error")
    public static let errorFieldUnknown = NSLocalizedString("_error_field_unknown", comment: "Form validation error")
    
    public static let errorUserCancelled = NSLocalizedString("_error_user_cancelled", comment: "user cancelled human validation procedure")
    public static let errorUserFailedHumanValidation = NSLocalizedString("_error_user_failed_human_validation", comment: "Human validation failed")
    
    public static let errorApplyPaymentOnRegistrationTitle = NSLocalizedString("_error_apply_payment_failed_on_registration_title", comment: "Error applying credit after registration alert")
    public static let errorApplyPaymentOnRegistrationMessage = NSLocalizedString("_error_apply_payment_failed_on_registration_message", comment: "Error applying credit after registration alert")
    public static let errorApplyPaymentOnRegistrationSupport = NSLocalizedString("_error_apply_payment_failed_on_registration_support", comment: "Error applying credit after registration alert")
    
    public static let errorInvalidHumanVerificationCodeTitle = NSLocalizedString("_error_invalid_human_verification_code_title", comment: "Invalid human verification code alert")
    public static let errorInvalidHumanVerificationCodeMessage = NSLocalizedString("_error_invalid_human_verification_code_message", comment: "Invalid human verification code alert")
    public static let errorInvalidHumanVerificationCodeTryOther = NSLocalizedString("_error_invalid_human_verification_code_try_other", comment: "Invalid human verification code alert button")
    public static let errorInvalidHumanVerificationCodeResend = NSLocalizedString("_error_invalid_human_verification_code_resend", comment: "Invalid human verification code alert button")
    
    public static let errorMITMTitle = NSLocalizedString("_error_mitm_title", comment: "Man In The Middle attack alert")
    public static let errorMITMdescription = NSLocalizedString("_error_mitm_description", comment: "Man In The Middle attack alert")
    
    // MARK: - Password encoding errors
    public static let errorModulusSignature = NSLocalizedString("_error_modulus_signature", comment: "Error when try to parse modulus signature")
    public static let errorGenerateSrp = NSLocalizedString("_error_generate_srp", comment: "Error when generate srp clint")
    public static let errorHashPassword = NSLocalizedString("_error_hash_password", comment: "Error when try to hash password")
    public static let errorFetchSession = NSLocalizedString("_error_fetch_session", comment: "Error try to restore user from the session")
    
    // MARK: - Network errors
    public static let neRequestTimedOut = NSLocalizedString("_ne_request_timed_out", comment: "Network error")
    public static let neUnableToConnectToHost = NSLocalizedString("_ne_unable_to_connect_to_host", comment: "Network error")
    public static let neNetworkConnectionLost = NSLocalizedString("_ne_network_connection_lost", comment: "Network error")
    public static let neNotConnectedToTheInternet = NSLocalizedString("_ne_not_connected_to_the_internet", comment: "Network error")
    
    public static let neTroubleshoot = NSLocalizedString("_ne_troubleshoot", comment: "Button on alert after a problem with internet connection")
    
    // MARK: - API errors
    public static let aeWrongLoginCredentials = NSLocalizedString("_ae_wrong_login_credentials", comment: "API error")
    public static let aeVpnInfoNotReceived = NSLocalizedString("_ae_vpn_info_not_received", comment: "API error")
    public static let errorServerInfoParser = NSLocalizedString("_error_server_info_parser", comment: "Error when try to parse the server info")
    public static let errorVpnProperties = NSLocalizedString("_error_vpn_properties", comment: "Default error when vpn properties fetch failed")
    public static let errorSessionCountParser = NSLocalizedString("_error_session_count_parser", comment: "Parsing error")
    public static let errorExistingSessionToServer = NSLocalizedString("_error_existing_session_to_server", comment: "Application error")
    public static let errorLoads = NSLocalizedString("_error_loads", comment: "Parsing error")
    public static let errorApiOffline = NSLocalizedString("_error_api_offline", comment: "API error")
    public static let errorSubscriptionParser = NSLocalizedString("_error_subscription_parser", comment: "Error when try to parse subscription info")
    public static let errorVerificationMethodsParser = NSLocalizedString("_error_verification_methods_parser", comment: "Error when try to parse verification methods")
    public static let errorUsernameUnavailable = NSLocalizedString("_error_username_unavailable", comment: "Username unavailable error")
    public static let errorKeychainFetch = NSLocalizedString("_error_keychain_fetch", comment: "Keychain error")
    public static let errorUserCreation = NSLocalizedString("_error_user_creation", comment: "Error when the app fails to create a user")
    public static let errorSignupUsingProtonMailAddress = NSLocalizedString("_error_signup_using_protonmail_address", comment: "Error when the user attempts to sign up using an existing ProtonMail email address")
    
    // MARK: - IAP errors
    public static let errorOccured = NSLocalizedString("_error_occured", comment: "In App Purchase error alert")
    public static let errorUnavailableProduct = NSLocalizedString("_error_unavailable_product", comment: "In App Purchase error")
    public static let errorReceiptLost = NSLocalizedString("_error_receipt_lost", comment: "In App Purchase error")
    public static let errorTransactionOfOtherUser = NSLocalizedString("_error_transaction_of_other_user", comment: "In App Purchase error")
    public static let errorPurchasedPlanDoesNotMatchAvailable = NSLocalizedString("_error_purchased_plan_does_not_match_available", comment: "In App Purchase error")
    public static let errorSandboxReceipt = NSLocalizedString("_error_sandbox_receipt", comment: "In App Purchase error")
    public static let errorCreditsApplied = NSLocalizedString("_error_credit_applied", comment: "In App Purchase error")
    public static let errorTransactionFailedByUnknownReason = NSLocalizedString("_error_transaction_failed_by_unknown_reason", comment: "In App Purchase error")
    public static let errorNoActiveUsername = NSLocalizedString("_error_no_active_username", comment: "In App Purchase error")
    public static let errorNoNewSubscriptionInSuccessfullResponse = NSLocalizedString("_error_no_new_subscription_in_successfull_response", comment: "In App Purchase error")
    
    // MARK: - Alerts
    public static let errorUnknownTitle = NSLocalizedString("_error_unknown_title", comment: "General title for several error alerts")
    
    public static let delinquentUserTitle = NSLocalizedString("_delinquent_user_title", comment: "Delinquent user alert")
    public static let delinquentUserDescription = NSLocalizedString("_delinquent_user_description", comment: "Delinquent user alert")
    public static let existingSession = NSLocalizedString("_existing_session", comment: "Existing connection alert")
    public static let existingSessionToServer = NSLocalizedString("_existing_session_to_server", comment: "Existing connection alert")
    public static let failedToAccessVpnCredentialsTitle = NSLocalizedString("_failed_to_access_vpn_credentials_title", comment: "VPN credentials not accessible alert")
    public static let failedToAccessVpnCredentialsDescription = NSLocalizedString("_failed_to_access_vpn_credentials_description", comment: "VPN credentials not accessible alert")
    
    public static let p2pDetectedPopUpTitle = NSLocalizedString("_p2p_detected_popup_title", comment: "P2P blocked alert")
    public static let p2pDetectedPopUpBody = NSLocalizedString("_p2p_detected_popup_body", comment: "P2P blocked alert")
    
    public static let sessionCountReachedTitle = NSLocalizedString("_session_count_reached_title", comment: "Session count limit alert")
    public static let sessionCountReachedDescription = NSLocalizedString("_session_count_reached_description", comment: "Session count limit alert")
    
    public static let upgradePlanToAccessCountry = NSLocalizedString("_upgrade_plan_to_access_country", comment: "macOS: plan upgrade required alert")
    public static let upgradePlanToAccessServer = NSLocalizedString("_upgrade_plan_to_access_server", comment: "macOS: plan upgrade required alert")
    public static let upgradePlanToAccessSecureCore1 = NSLocalizedString("_upgrade_plan_to_access_secure_core_p1", comment: "macOS: plan upgrade for SecureCore required alert")
    public static let upgradePlanToAccessSecureCore2 = NSLocalizedString("_upgrade_plan_to_access_secure_core_p2", comment: "macOS: plan upgrade for SecureCore required alert")
    
    public static let serverUnderMaintenance = NSLocalizedString("_server_under_maintenance", comment: "Under maintenance alert")
    public static let allServersInCountryUnderMaintenance = NSLocalizedString("_all_servers_in_country_under_maintenance", comment: "Under maintenance alert")
    public static let countryServersUnderMaintenance = NSLocalizedString("_country_servers_under_maintenance", comment: "Under maintenance alert")
    public static let allServersUnderMaintenance = NSLocalizedString("_all_servers_under_maintenance", comment: "Under maintenance alert")
    public static let allServersInProfileUnderMaintenance = NSLocalizedString("_all_servers_in_profile_under_maintenance", comment: "Under maintenance alert")
            
    public static let trialWelcomeHeadingIos = NSLocalizedString("_trial_welcome_heading_iOS", comment: "iOS trial welcome screen")
    public static let trialWelcomeDescriptionIos = NSLocalizedString("_trial_welcome_description_iOS", comment: "iOS trial welcome screen")
    public static let trialWelcomeEndsInIos = NSLocalizedString("_trial_welcome_ends_in_iOS", comment: "iOS trial welcome screen")
    public static let trialExpiredAlertTitleIos = NSLocalizedString("_trial_expired_alert_title_iOS", comment: "iOS trial expired screen")
    public static let trialExpiredAlertBodyIos = NSLocalizedString("_trial_expired_alert_body_iOS", comment: "iOS trial expired screen")
    
    public static let p2pForwardedPopUpTitle = NSLocalizedString("_p2p_forwarded_popup_title", comment: "P2P forward alert")
    public static let p2pForwardedPopUpBody = NSLocalizedString("_p2p_forwarded_popup_body", comment: "P2P forward alert")
    public static let p2pForwardedPopUpBodyP1 = NSLocalizedString("_p2p_forwarded_popup_body_p1", comment: "P2P forward alert")
    public static let p2pForwardedPopUpBodyP2 = NSLocalizedString("_p2p_forwarded_popup_body_p2", comment: "P2P forward alert")
    
    public static let vpnStuckDisconnectingTitle = NSLocalizedString("_vpn_stuck_disconnecting_title", comment: "VPN stuck alert")
    public static let vpnStuckDisconnectingBody = NSLocalizedString("_vpn_stuck_disconnecting_body", comment: "VPN stuck alert")
    
    public static let updateRequiredTitle = NSLocalizedString("_update_required", comment: "App update required alert")
    public static let updateRequiredDescription = NSLocalizedString("_update_required_no_longer_supported", comment: "App update required alert")
    public static let updateRequiredSupport = NSLocalizedString("_update_required_support", comment: "App update required alert")
    public static let updateUpdate = NSLocalizedString("_update_required_update", comment: "App update required alert")
    
    public static let invalidRefreshTokenTitle = NSLocalizedString("_invalid_refresh_token", comment: "Token expired alert")
    public static let invalidRefreshTokenDescription = NSLocalizedString("_invalid_refresh_token_please_login", comment: "Token expired alert")
    
    public static let protonVpnMacOS = NSLocalizedString("_protonvpn_macos", comment: "Mac: neagent help screen")
    public static let neagentDescription = NSLocalizedString("_neagent_description", comment: "Mac: neagent help screen")
    public static let neagentPassword = NSLocalizedString("_neagent_password", comment: "Mac: neagent help screen")
    public static let macPassword = NSLocalizedString("_mac_password", comment: "Mac: neagent help screen")
    public static let neagentFirstStep = NSLocalizedString("_neagent_first_step", comment: "Mac: neagent help screen")
    public static let neagentAlwaysAllow = NSLocalizedString("_neagent_always_allow", comment: "Mac: neagent help screen")
    public static let neagentSecondStep = NSLocalizedString("_neagent_second_step", comment: "Mac: neagent help screen")
    public static let gotIt = NSLocalizedString("_got_it", comment: "Button in several different alerts")
    
    public static let paidRequired = NSLocalizedString("_paid_required", comment: "Plan upgrade required alert")
    public static let plusRequired = NSLocalizedString("_plus_required", comment: "Plan upgrade required alert")
    
    public static let upgradeUnavailableTitle = NSLocalizedString("_upgrade_unavailable_title", comment: "Plan upgrade unavailable alert")
    public static let upgradeUnavailableBody = NSLocalizedString("_upgrade_unavailable_body", comment: "Plan upgrade unavailable alert")
    
    public static let deleteApplicationDataPopupTitle = NSLocalizedString("_delete_application_data_popup_title", comment: "MacOS: clear application data alert")
    public static let deleteApplicationDataPopupBody = NSLocalizedString("_delete_application_data_popup_body", comment: "MacOS: clear application data alert")
    
    public static let killSwitchBlockingTitle = NSLocalizedString("_kill_switch_blocking_title", comment: "MacOS: killswitch blocking alert")
    public static let killSwitchBlockingBody = NSLocalizedString("_kill_switch_blocking_body", comment: "MacOS: killswitch blocking alert")
    
    public static let killSwitchErrorTitle = NSLocalizedString("_kill_switch_error_title", comment: "MacOS: killswitch error alert")
    public static let killSwitchErrorBody = NSLocalizedString("_kill_switch_error_body", comment: "MacOS: killswitch error alert")
    
    public static let killSwitchHelperInstallPopupBody = NSLocalizedString("_kill_switch_helper_install_popup_body", comment: "MacOS: killswitch alert")
    public static let killSwitchHelperUpdatePopupBody = NSLocalizedString("_kill_switch_helper_update_popup_body", comment: "MacOS: updating helper alert")
    public static let killSwitchHelperInstallIssuePopupBody = NSLocalizedString("_kill_switch_helper_install_issue_popup_body", comment: "MacOS: killswicth install error alert")
    
    public static let existingFirewallPopupTitle = NSLocalizedString("_existing_firewall_popup_title", comment: "MacOS: Existing firewall alert")
    public static let existingFirewallPopupBody = NSLocalizedString("_existing_firewall_popup_body", comment: "MacOS: Existing firewall alert")
    public static let unsecureWiFi = NSLocalizedString("_unsecure_wifi", comment: "MacOS: Alert when user connects to WiFi without password")
    public static let unsecureWiFiLearnMore = NSLocalizedString("_unsecure_wifi_learn_more", comment: "The link to this website https://protonvpn.com/blog/public-wifi-safety/")
        
    // MARK: - Settings
    public static let preferences = NSLocalizedString("_preferences", comment: "MacOS: Settings screen title")
    public static let settings = NSLocalizedString("_settings", comment: "iOS: Settings screen title and tab title")
    public static let account = NSLocalizedString("_account", comment: "Account tab button in settings window (MacOS) and in several modals (both MacOS and iOS)")
    public static let general = NSLocalizedString("_general", comment: "MacOS: General tab in setting window")
    public static let accountType = NSLocalizedString("_account_type", comment: "MacOS: Settings -> Account: name of field.")
    public static let accountPlan = NSLocalizedString("_account_plan", comment: "MacOS: Settings -> Account: name of field.")
    public static let manageSubscription = NSLocalizedString("_manage_subscription_on_web", comment: "MacOS: Settings -> Account. Button leading to web interface.")
    public static let killSwitch = NSLocalizedString("_kill_switch", comment: "MacOS: Settings -> Connection: name of field.")
    public static let killSwitchTooltip = NSLocalizedString("_kill_switch_tooltip", comment: "MacOS: Settings -> Connection. Kill switch functionality description.")
    public static let alwaysOnVpn = NSLocalizedString("_always_on_vpn", comment: "iOS Settings: toggle name")
    public static let alwaysOnVpnTooltipIos = NSLocalizedString("_always_on_vpn_tooltip_ios", comment: "iOS Settinsg screen: always-on description under the switch")
    public static let autoConnect = NSLocalizedString("_auto_connect", comment: "MacOS: Settings -> Connection: name of field.")
    public static let autoConnectTooltip = NSLocalizedString("_auto_connect_tooltip", comment: "MacOS: Settings -> Connection: description.")
    public static let quickConnectTooltip = NSLocalizedString("_quick_connect_tooltip", comment: "MacOS: Settings -> Connection: description.")
    public static let startMinimized = NSLocalizedString("_start_minimized", comment: "MacOS: Settings -> General: name of field.")
    public static let systemNotifications = NSLocalizedString("_system_notifications", comment: "MacOS: Settings -> General: name of field.")
    public static let earlyAccess = NSLocalizedString("_early_access", comment: "MacOS: Settings -> General: name of field.")
    public static let earlyAccessTooltip = NSLocalizedString("_early_access_tooltip", comment: "MacOS: Settings -> General: description.")
    public static let dnsLeakProtection = NSLocalizedString("_dns_leak_protection", comment: "MacOS: Settings -> Connection: name of field.")
    public static let dnsLeakProtectionTooltip = NSLocalizedString("_dns_leak_protection_tooltip", comment: "MacOS: Settings -> Connection: description.")
    public static let securityOptions = NSLocalizedString("_security_options", comment: "iOS Settings: table section header")
    public static let subscriptionPlan = NSLocalizedString("_subscription_plan", comment: "iOS Settings -> Connection: name of field.")
    public static let choosePlan = NSLocalizedString("_choose_plan", comment: "iOS plan selection: header")
    public static let protocolLabel = NSLocalizedString("_protocol", comment: "iOS Settings: VPN protocol label.")
    public static let vpnProtocol = NSLocalizedString("_vpn_protocol", comment: "iOS Settings -> Protocol: screen title")
    public static let openVpn = NSLocalizedString("_openvpn", comment: "iOS Settings -> Protocol: OpenVPN option")
    public static let ikev2 = NSLocalizedString("_ikev2", comment: "iOS Settings -> Protocol: IKEv2 option")
    public static let tcp = NSLocalizedString("_tcp", comment: "iOS Settings -> Protocol -> OpenVPN: TCP option")
    public static let udp = NSLocalizedString("_udp", comment: "iOS Settings -> Protocol -> OpenVPN: UDP option")
    public static let viewLogs = NSLocalizedString("_view_logs", comment: "MacOS menu item; iOS setting screen item")
    public static let logs = NSLocalizedString("_logs", comment: "iOS logs screen title")
    public static let applicationLogs = NSLocalizedString("_application_logs", comment: "iOS Settings: applications logs row")
    public static let openVpnLogs = NSLocalizedString("_open_vpn_logs", comment: "iOS Settings: OpenVPN logs row")
    public static let activateWidget = NSLocalizedString("_activate_widget", comment: "iOS widget help screen: title")
    public static let activateWidgetStep1 = NSLocalizedString("_activate_widget_step_1", comment: "iOS widget help screen: text")
    public static let activateWidgetStep2 = NSLocalizedString("_activate_widget_step_2", comment: "iOS widget help screen: text")
    public static let activateWidgetStep3 = NSLocalizedString("_activate_widget_step_3", comment: "iOS widget help screen: text")
    public static let reportBug = NSLocalizedString("_report_bug", comment: "Report bug screen title; iOS settings screen: item;")
    
    // MARK: - Plans
    public static let getPlan = NSLocalizedString("_get_plan", comment: "%@ is a plan name e.g. Get Plus Plan")
    public static let freeCountries = NSLocalizedString("_free_countries", comment: "Account plan description")
    public static let allCountries = NSLocalizedString("_all_countries", comment: "Account plan description")
    public static let planConnection = NSLocalizedString("_plans_connection", comment: "Account plan description")
    public static func planConnections(_ number: Int) -> String {
        return String.localizedStringWithFormat(NSLocalizedString("_plans_connections", comment: ""), number)
    }
    public static let speed = NSLocalizedString("_speed", comment: "%@ is a speed description e.g. Speed: Highest")
    public static let medium = NSLocalizedString("_medium", comment: "Value of speed in _speed")
    public static let high = NSLocalizedString("_high", comment: "Value of speed in _speed")
    public static let highest = NSLocalizedString("_highest", comment: "Value of speed in _speed")
    public static let plusPlanFeatures = NSLocalizedString("_plus_plan_features", comment: "Features of account plan")
    public static let doYouWantToActivateSubscriptionFor = NSLocalizedString("_do_you_want_to_activate_subscription_for", comment: "Alert message during In App Purchase")
    public static let mostPopular = NSLocalizedString("_most_popular", comment: "Label in Plan information")
    public static let advancedFeatures = NSLocalizedString("_advanced_features", comment: "Plan information")
    public static let selectPlan = NSLocalizedString("_select_plan", comment: "Button in plan selection")
    public static let plansFooter = NSLocalizedString("_plans_footer", comment: "Text description in plan selection screen")
    public static let perYearShort = NSLocalizedString("_per_year_short", comment: "Per year. Appended to plan price.")
    public static let free = NSLocalizedString("_free", comment: "Used instead of price for free plans.")
    public static let featureServerCount = NSLocalizedString("_feature_server_count", comment: "iOS plan feature")
    public static let featureSpeed = NSLocalizedString("_feature_speed", comment: "iOS plan feature")
    public static let featureConnections = NSLocalizedString("_feature_connections", comment: "iOS plan feature")
    public static let featureSecureStreaming = NSLocalizedString("_feature_secure_streaming", comment: "iOS plan feature")
    public static let featureTor = NSLocalizedString("_feature_tor", comment: "iOS plan feature")
    public static let featureSecureCore = NSLocalizedString("_feature_secure_core", comment: "iOS plan feature")
    public static let featureBlockedContent = NSLocalizedString("_feature_blocked_content", comment: "iOS plan feature")
    public static let featureBT = NSLocalizedString("_feature_bt", comment: "iOS plan feature")
    
    // MARK: - Upsell & Onboard - macOS
    public static let welcomeTitle = NSLocalizedString("_welcome_title", comment: "MacOS welcome screen: title")
    public static let welcomeDescription = NSLocalizedString("_welcome_description", comment: "MacOS welcome screen: description")
    public static let noThanks = NSLocalizedString("_no_thanks", comment: "MacOS welcome screen: cancel button")
    public static let skip = NSLocalizedString("_skip", comment: "MacOS welcome screen: skip button")
    public static let takeTour = NSLocalizedString("_take_tour", comment: "MacOS welcome screen: take a tour button")
    
    public static let plus = NSLocalizedString("_plus", comment: "PLUS word that is put inside `enjoyForFree` translation instead of %@")
    public static let enjoyForFree = NSLocalizedString("_enjoy_for_free", comment: "%@ is always 'PLUS' e.g. ENJOY PLUS FOR FREE!")
    public static let protonVpnPlus = NSLocalizedString("_protonvpn_plus", comment: "Plan mame that is inserted into other translations: freeTrialAboutToExpireDescription, freeTrialExpiredDescription and welcomeGiftDescription")
    public static let welcomeGiftDescription = NSLocalizedString("_welcome_gift_description", comment: "%@ is always 'ProtonVPN PLUS' e.g. As a welcome gift, you are granted a 7-day access to a\nProtonVPN PLUS subscription which gives you: A list of Plus plan-only features follows this text")
    public static let p2pServers = NSLocalizedString("_p2p_servers", comment: "MacOS: Used ir trial welcome and trial expired screens")
    public static let connectionsAvailable = NSLocalizedString("_5_connections", comment: "Mac: Used in several Trial screens")
    public static let multipleCountries = NSLocalizedString("_multiple_countries", comment: "Mac: Used in several Trial screens")
    public static let expired = NSLocalizedString("_expired", comment: "MAC: is inserted into _free_trial_expired_title insteadof %@")
    
    public static let freeTrialExpiredTitle = NSLocalizedString("_free_trial_expired_title", comment: "%@ is always 'EXPIRED' e.g. YOUR FREE TRIAL EXPIRED")
    public static let freeTrialExpiredDescription = NSLocalizedString("_free_trial_expired_description", comment: "%@ is always 'ProtonVPN PLUS' e.g. Your account has been downgraded to ProtonVPN FREE.\nHere's what you will miss from ProtonVPN PLUS: A list of Plus plan-only features follows this text")
    public static let maybeLater = NSLocalizedString("_maybe_later", comment: "Cancel button in trial modals used in both iOS and MacOS")
    public static let upgradeNow = NSLocalizedString("_upgrade_now", comment: "Upgrade button in trial modals used in both iOS and MacOS")
    public static let moneyBackGuarantee = NSLocalizedString("_money_back_guarantee", comment: "Label in several trial screens on MacOS")
    
    public static let plusUpgradeTitle = NSLocalizedString("_plus_upgrade_title", comment: "MacOS: Upgrade screen title")
    public static let plusUpgradeDescription = NSLocalizedString("_plus_upgrade_description", comment: "MacOS: Upgrade screen text")
    public static let upgradeMyPlan = NSLocalizedString("_upgrade_my_plan", comment: "MacOS: Button in Upgrade screen")
    
    public static let freeTrialAboutToExpireTitle = NSLocalizedString("_free_trial_about_to_expire_title", comment: "MacOS: \"Trial about to expire\" screen title")
    public static let freeTrialAboutToExpireDescription = NSLocalizedString("_free_trial_about_to_expire_description", comment: "%@ is always 'ProtonVPN PLUS' e.g. Upgrade to ProtonVPN PLUS and continue enjoying these features: I list of Plus plan-only features follows this text")
    public static let connectionsAvailableDescription = NSLocalizedString("_5_connections_description", comment: "MacOS: \"Trial about to expire\" screen")
    public static let secureCoreDescription = NSLocalizedString("_secure_core_description", comment: "MacOS: \"Trial about to expire\" screen")
    public static let multipleServersTitle = NSLocalizedString("_multiple_servers_title", comment: "MacOS: \"Trial about to expire\" screen")
    public static let multipleServersDescription = NSLocalizedString("_multiple_servers_description", comment: "MacOS: \"Trial about to expire\" screen")
    public static let secureStreamingTitle = NSLocalizedString("_secure_streaming_title", comment: "MacOS: \"Trial about to expire\" screen")
    public static let secureStreamingDescription = NSLocalizedString("_secure_streaming_description", comment: "MacOS: \"Trial about to expire\" screen")
    
    public static let quickConnectTourTitle = NSLocalizedString("_quick_connect_tour_title", comment: "MacOS app tour: quick connect title")
    public static let quickConnectTourDescription = NSLocalizedString("_quick_connect_tour_description", comment: "MacOS app tour: quick connect description")
    public static let profilesTourTitle = NSLocalizedString("_profiles_tour_title", comment: "MacOS app tour: profiles title")
    public static let profilesTourDescription = NSLocalizedString("_profiles_tour_description", comment: "MacOS app tour: profiles description")
    public static let countriesTourTitle = NSLocalizedString("_countries_tour_title", comment: "MacOS app tour: countries list title")
    public static let countriesTourDescription = NSLocalizedString("_countries_tour_description", comment: "MacOS app tour: countries list description")
    public static let secureCoreTourTitle = NSLocalizedString("_secure_core_tour_title", comment: "MacOS app tour: secure core title")
    public static let secureCoreTourDescription = NSLocalizedString("_secure_core_tour_description", comment: "MacOS app tour: secure core description")
    public static let mapTourTitle = NSLocalizedString("_map_tour_title", comment: "MacOS app tour: map title")
    public static let mapTourDescription = NSLocalizedString("_map_tour_description", comment: "MacOS app tour: map description")
    public static let nextTip = NSLocalizedString("_next_tip", comment: "MacOS app tour: next tip button")
    public static let endTour = NSLocalizedString("_end_tour", comment: "MacOS app tour: end tour button")
    
    // MARK: - Upsell & Onboard - iOS
    public static let iosOnboardingPage1Title = NSLocalizedString("_ios_onboarding_page1_title", comment: "iOS onboarding texts")
    public static let iosOnboardingPage1Description = NSLocalizedString("_ios_onboarding_page1_description", comment: "iOS onboarding texts")
    public static let iosOnboardingPage2Title = NSLocalizedString("_ios_onboarding_page2_title", comment: "iOS onboarding texts")
    public static let iosOnboardingPage2Description = NSLocalizedString("_ios_onboarding_page2_description", comment: "iOS onboarding texts")
    public static let iosOnboardingPage3Title = NSLocalizedString("_ios_onboarding_page3_title", comment: "iOS onboarding texts")
    public static let iosOnboardingPage3Description = NSLocalizedString("_ios_onboarding_page3_description", comment: "iOS onboarding texts")
    public static let next = NSLocalizedString("_next", comment: "iOS onboarding next item button")
    public static let discoverTheApp = NSLocalizedString("_discover_the_app", comment: "iOS onboarding button to check app without logging in")
    
    // MARK: - Extensions
    public static let extensions = NSLocalizedString("_extensions", comment: "iOS: Table header in settings screen")
    public static let widget = NSLocalizedString("_widget", comment: "iOS: 1. Menu point in settings screen. 2. Widget description screen title.")
    public static let logInToUseWidget = NSLocalizedString("_log_in_to_use_widget", comment: "iOS widget: text for not-logged-in user")
    public static let vpnStatusNotLoggedIn = NSLocalizedString("_vpnstatus_not_loggedin", comment: "Status of VPN connection reported by Siri")
    
    // MARK: - Report bugs
    public static let reportAttachments = NSLocalizedString("_report_attachments", comment: "Bug report attachments")
    public static let reportLogs = NSLocalizedString("_report_logs", comment: "iOS bug report: header before logs description")
    public static let reportLogsDescription = NSLocalizedString("_report_logs_description", comment: "iOS bug report: description of log selection switch")
    public static let reportReport = NSLocalizedString("_report_report", comment: "iOS bug report: Title before report bug form")
    public static let reportPlaceholderEmail = NSLocalizedString("_report_placeholder_email", comment: "iOS bug report: Placeholder for email form field")
    public static let reportPlaceholderMessage = NSLocalizedString("_report_placeholder_message", comment: "Bug report: Placeholder for text form field")
    public static let reportSend = NSLocalizedString("_report_send", comment: "Bug report: Send report button text")
    public static let reportSuccess = NSLocalizedString("_report_success", comment: "Bug report: Success message after report was sent")
    public static let reportDescription = NSLocalizedString("_report_description", comment: "Mac bug report: description text before bug report form")
    public static let reportFieldEmail = NSLocalizedString("_report_field_email", comment: "Mac bug report: email field label")
    public static let reportFieldCountry = NSLocalizedString("_report_field_country", comment: "Mac bug report: country field label")
    public static let reportFieldISP = NSLocalizedString("_report_field_isp", comment: "Mac bug report: Internet Service Provider field label")
    public static let reportFieldAccount = NSLocalizedString("_report_field_account", comment: "Mac bug report: label before username")
    public static let reportFieldPlan = NSLocalizedString("_report_field_plan", comment: "Mac bug report: label before users protonvpn plan")
    public static let reportFieldVersion = NSLocalizedString("_report_field_version", comment: "Mac bug report: label before app version number")
    public static let reportFieldFeedback = NSLocalizedString("_report_field_feedback", comment: "Mac bug report: message field label")
    public static let reportAddFile = NSLocalizedString("_report_add_file", comment: "Mac bug report: button to add new attachment. Also acts as a title for attachment list table.")
    public static let reportMaxFileSize = NSLocalizedString("_report_max_file_size", comment: "Mac bug report: info text")
    
    // MARK: Mac main menu
    public static let menuAbout = NSLocalizedString("_menu_about", comment: "Main mac app menu item")
    public static let menuCheckUpdates = NSLocalizedString("_menu_check_updates", comment: "Main mac app menu item")
    public static let menuPreferences = NSLocalizedString("_menu_preferences", comment: "Main mac app menu item")
    public static let menuHideSelf = NSLocalizedString("_menu_hide_self", comment: "Main mac app menu item")
    public static let menuHideOthers = NSLocalizedString("_menu_hide_others", comment: "Main mac app menu item")
    public static let menuShowAll = NSLocalizedString("_menu_show_all", comment: "Main mac app menu item")
    public static let menuLogout = NSLocalizedString("_menu_logout", comment: "Main mac app menu item")
    public static let menuQuit = NSLocalizedString("_menu_quit", comment: "Main mac app menu item")
    public static let menuWindow = NSLocalizedString("_menu_window", comment: "Main mac app menu item")
    public static let menuMinimize = NSLocalizedString("_menu_minimize", comment: "Main mac app menu item")
    public static let upgradeForSecureCore = NSLocalizedString("_upgrade_for_secure_core", comment: "Main mac app menu item")
    public static let upgradeToPlus = NSLocalizedString("_upgrade_to_plus", comment: "Main mac app menu item")
    public static let openAppToLogIn = NSLocalizedString("_open_app_to_log_in", comment: "Main mac app menu item")
    public static let clearApplicationData = NSLocalizedString("_clear_application_data", comment: "Main mac app menu item")
    public static let reportAnIssue = NSLocalizedString("_report_an_issue", comment: "Main mac app menu item")

    // MARK: Manage subscription
    public static let subscritpionWillExpire = NSLocalizedString("_subscription_will_expire", comment: "Subscription expiration text with a date inserted instead of %@")
    public static let subscritpionWillRenew = NSLocalizedString("_subscription_will_renew", comment: "Subscription expiration text for users whose plan will be renewed automatically on a date inserted instead of %@")
    public static let subscritpionDescription = NSLocalizedString("_subscription_description", comment: "Text under current plan information")
    public static let subscritpionButton = NSLocalizedString("_subscription_button", comment: "Text under current plan information")
    public static let subscritpionExtendSuccess = NSLocalizedString("_subscription_extended_success", comment: "Message shown to user after he bought credits to extend subscription.")
    
    // MARK: Connection troubleshooting
    public static let troubleshootTitle = NSLocalizedString("_troubleshoot_title", comment: "Title of connection troubleshooting screen")
    public static let troubleshootItemTitleAlternative = NSLocalizedString("_troubleshoot_item_alt_title", comment: "Title of troubleshooting item")
    public static let troubleshootItemDescriptionAlternative = NSLocalizedString("_troubleshoot_item_alt_description", comment: "Description of troubleshooting item")
    public static let troubleshootItemLinkAlternative1 = NSLocalizedString("_troubleshoot_item_alt_link1", comment: "Text that will become a Learn more link in _troubleshoot_item_alt_description")
    public static let troubleshootItemTitleNoInternet = NSLocalizedString("_troubleshoot_item_nointernet_title", comment: "Title of troubleshooting item")
    public static let troubleshootDescriptionNoInternet = NSLocalizedString("_troubleshoot_item_nointernet_description", comment: "Description of troubleshooting item")
    public static let troubleshootItemTitleISP = NSLocalizedString("_troubleshoot_item_isp_title", comment: "Title of troubleshooting item")
    public static let troubleshootDescriptionISP = NSLocalizedString("_troubleshoot_item_isp_description", comment: "Description of troubleshooting item")
    public static let troubleshootItemLinkISP1 = NSLocalizedString("_troubleshoot_item_isp_link1", comment: "Text that will become a link to Tor in _troubleshoot_item_isp_description")
    public static let troubleshootItemTitleGovernment = NSLocalizedString("_troubleshoot_item_gov_title", comment: "Title of troubleshooting item")
    public static let troubleshootDescriptionGovernment = NSLocalizedString("_troubleshoot_item_gov_description", comment: "Description of troubleshooting item")
    public static let troubleshootItemLinkGovernment1 = NSLocalizedString("_troubleshoot_item_gov_link1", comment: "Text that will become a link to Tor in _troubleshoot_item_gov_description")
    public static let troubleshootItemTitleAntivirus = NSLocalizedString("_troubleshoot_item_antivirus_title", comment: "Title of troubleshooting item")
    public static let troubleshootDescriptionAntivirus = NSLocalizedString("_troubleshoot_item_antivirus_description", comment: "Description of troubleshooting item")
    public static let troubleshootItemTitleProxy = NSLocalizedString("_troubleshoot_item_proxy_title", comment: "Title of troubleshooting item")
    public static let troubleshootDescriptionProxy = NSLocalizedString("_troubleshoot_item_proxy_description", comment: "Description of troubleshooting item")
    public static let troubleshootItemTitleProton = NSLocalizedString("_troubleshoot_item_proton_title", comment: "Title of troubleshooting item")
    public static let troubleshootDescriptionProton = NSLocalizedString("_troubleshoot_item_proton_description", comment: "Description of troubleshooting item")
    public static let troubleshootItemLinkProton1 = NSLocalizedString("_troubleshoot_item_proton_link1", comment: "Text that will become a link to proton status page in _troubleshoot_item_proton_description")
    public static let troubleshootItemTitleOther = NSLocalizedString("_troubleshoot_item_other_title", comment: "Title of troubleshooting item")
    public static let troubleshootDescriptionOther = NSLocalizedString("_troubleshoot_item_other_description", comment: "Description of troubleshooting item")
    public static let troubleshootItemLinkOther1 = NSLocalizedString("_troubleshoot_item_other_link1", comment: "Text that will become a link to supporyt form in _troubleshoot_item_other_description")
    public static let troubleshootItemLinkOther2 = NSLocalizedString("_troubleshoot_item_other_link2", comment: "Text that will become a link to email in _troubleshoot_item_other_description")
    public static let troubleshootItemLinkOther3 = NSLocalizedString("_troubleshoot_item_other_link3", comment: "Text that will become a link to twitter in _troubleshoot_item_other_description")
    
}
