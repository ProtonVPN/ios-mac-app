stages:
  - linting
  - core_unit_tests
  - apps_unit_tests
  - release

variables:
  LC_ALL: "en_US.UTF-8"
  LANG: "en_US.UTF-8"

core_lint:
  stage: linting
  tags:
    - iOS_ARM
  script:
    - cd libraries/vpncore    
    - ../../Pods/SwiftLint/swiftlint --strict --reporter junit > ../../swiftlint.xml
  allow_failure: false
  artifacts:
    name: "core-lint-$CI_COMMIT_TAG"
    paths:
      - swiftlint.xml
    reports:
      junit:
        - swiftlint.xml
    expire_in: 90 days

ios_lint:
  stage: linting
  tags:
    - iOS_ARM
  script:
    - cd apps/iOS    
    - ../../Pods/SwiftLint/swiftlint --strict --reporter junit > ../../swiftlint.xml
  allow_failure: false
  artifacts:
    name: "ios-lint-$CI_COMMIT_TAG"
    paths:
      - swiftlint.xml
    reports:
      junit:
        - swiftlint.xml
    expire_in: 90 days
    
macos_lint:
  stage: linting
  tags:
    - macOS_ARM
  script:
    - cd apps/macos    
    - ../../Pods/SwiftLint/swiftlint --strict --reporter junit > ../../swiftlint.xml
  allow_failure: false
  artifacts:
    name: "ios-lint-$CI_COMMIT_TAG"
    paths:
      - swiftlint.xml
    reports:
      junit:
        - swiftlint.xml
    expire_in: 90 days     

core_ios_unit_tests:
  stage: core_unit_tests
  tags:
    - iOS_ARM
  script:
    - xcrun simctl create ${CI_PIPELINE_ID} com.apple.CoreSimulator.SimDeviceType.iPhone-11 `xcrun simctl list runtimes | grep iOS | awk '{print $NF}'`
    - fastlane ios_core_test
    - fastlane/print-coverage.sh fastlane/test_output/vpncore-ios.xcresult vpncore.framework
  after_script:
    - xcrun simctl delete $CI_PIPELINE_ID
  artifacts:
    reports:
      junit:
        - fastlane/test_output/report.junit
        
core_macos_unit_tests:
  stage: core_unit_tests
  tags:
    - macOS_ARM
  script:
    - base64 -D -o Certificates.p12 <<< $DEVELOPER_CERTIFICATE
    - fastlane create_macos_keychain
    - fastlane macos_core_test
    - fastlane/print-coverage.sh fastlane/test_output/vpncore-macos.xcresult vpncore.framework
  after_script: # Cleanup    
    - fastlane delete_macos_keychain
  artifacts:
    reports:
      junit:
        - fastlane/test_output/report.junit         

ios_unit_tests:
  stage: apps_unit_tests
  tags:
    - iOS_ARM
  script:
    - xcrun simctl create ${CI_PIPELINE_ID} com.apple.CoreSimulator.SimDeviceType.iPhone-11 `xcrun simctl list runtimes | grep iOS | awk '{print $NF}'`    
    - cd apps/ios/ProtonVPN/ && ../../../libraries/vpncore/Source/prepare_obfuscated_constants.sh && cd ../../../
    - cd apps/ios/ProtonVPNUITests/ && Scripts/prepare_credentials.sh && cd ../../../
    - fastlane ios_app_test
    - fastlane/print-coverage.sh fastlane/test_output/ProtonVPN-iOS.xcresult ProtonVPN.app
  after_script:
    - xcrun simctl delete $CI_PIPELINE_ID
  artifacts:
    reports:
      junit:
        - fastlane/test_output/report.junit

macos_unit_tests:
  dependencies: []
  stage: apps_unit_tests
  script:
    - cd apps/macos/ProtonVPN/ && ../../../libraries/vpncore/Source/prepare_obfuscated_constants.sh && cd ../../../
    - cd apps/macos/ProtonVPNUITests/ && Scripts/prepare_credentials.sh && cd ../../../
    - base64 -D -o Certificates.p12 <<< $DEVELOPER_CERTIFICATE
    - mkdir -pv ~/Library/MobileDevice/Provisioning\ Profiles/
    - base64 -D -o ~/Library/MobileDevice/Provisioning\ Profiles/ProtonVPN_Mac_Development_PP.provisionprofile <<< $DEVELOPMENT_PROFILE
    - base64 -D -o ~/Library/MobileDevice/Provisioning\ Profiles/ProtonVPN_OpenVPN_Development_PP.provisionprofile <<< $DEVELOPMENT_PROFILE_OVPN    
    - fastlane create_macos_keychain
    - fastlane macos_app_test
    - fastlane/print-coverage.sh fastlane/test_output/ProtonVPN-macOS.xcresult ProtonVPN.app
  after_script: # Cleanup
    - rm -f ~/Library/MobileDevice/Provisioning\ Profiles/ProtonVPN_Mac_Development_PP.provisionprofile
    - rm -f ~/Library/MobileDevice/Provisioning\ Profiles/ProtonVPN_OpenVPN_Development_PP.provisionprofile
    - fastlane delete_macos_keychain
  tags:
    - macOS_ARM
  artifacts:
    name: "macos-tests-$CI_COMMIT_TAG"
    when: always
    paths:
      - fastlane/test_output/
    expire_in: 3 days
    reports:
      junit:
        - fastlane/test_output/report.junit        

ios_testflight_internal:
  stage: release
  before_script:
    - create_ios_keychain
  script:
    - base64 -D -o Certificates.p12 <<< $DISTRIBUTION_CERTIFICATE
    - fastlane sigh download_all --download_xcode_profiles
    - cd apps/ios/ProtonVPN/ && ../../../libraries/vpncore/Source/prepare_obfuscated_constants.sh && cd ../../../
    - fastlane ios_internal_beta changelog:"Latest $CI_COMMIT_REF_NAME build"
    # - fastlane ios internal_staging changelog:"Latest $CI_COMMIT_REF_NAME build"
  after_script: # Cleanup
    - rm -f Certificates.p12
    - fastlane delete_ios_keychain
  tags:
    - iOS-deploy
  environment:
    name: deployment
  when: manual
  artifacts:
    name: "ios-build-nr"
    when: always
    paths:
      - .last_build_nr
    expire_in: 7 days
